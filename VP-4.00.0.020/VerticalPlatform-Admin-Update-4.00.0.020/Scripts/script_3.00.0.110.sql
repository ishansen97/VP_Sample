
EXEC dbo.global_DropStoredProcedure 'dbo.adminProduct_GetCategoryBySearchFilters'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[adminProduct_GetCategoryBySearchFilters]
	@siteId int,
	@text varchar(max),
	@enabled bit,
	@categoryTypeIds varchar(max),
	@isSearchCategory bit,
	@autoGenerated bit,	
	@selectLimit int,
	@vendorId int
	

AS
-- ==========================================================================
-- $Author: Deshapriya $
-- ==========================================================================
BEGIN
	   		
	
	CREATE TABLE #category_ids (category_id int)
	
	IF(@vendorId IS NOT NULL)
	BEGIN
		-- VENDOR ID SPECIFIED
		INSERT INTO #category_ids (category_id)
		SELECT DISTINCT c.category_id
		FROM product_to_vendor pv
			INNER JOIN product_to_category pc
				  ON pv.product_id = pc.product_id
			INNER JOIN category c
				  ON pc.category_id = c.category_id
			INNER JOIN product p 
				  ON pc.product_id = p.product_id
		WHERE @siteId = c.site_id 
			AND (@enabled IS NULL OR c.enabled = @enabled) 
			AND pv.vendor_id = @vendorId
			
			
		INSERT INTO #category_ids (category_id)
		SELECT category_id 
		FROM
		(
			SELECT c.category_id    
			FROM category c
				INNER JOIN category_to_vendor cv
					ON c.category_id = cv.category_id
			WHERE @siteId = c.site_id 
				AND cv.vendor_id = @vendorId
		) category_ids
		WHERE category_id NOT IN (SELECT category_id FROM #category_ids)
	END

	ELSE
	BEGIN
		-- VENDOR ID IS NULL
		INSERT INTO #category_ids (category_id)
		SELECT category_id    
		FROM category
		WHERE @siteId = site_id
	END


	DECLARE @catTypeIds TABLE (cat_id INT) 
	INSERT INTO @catTypeIds(cat_id) SELECT [value] FROM Global_Split(@categoryTypeIds, ',')
	-- CHECK IF CATEGORY TYPE 2	(Branch Category (no non-category branches)) IS IN THE LIST AND IF SO, ADD TYPE 3 TOO (Branch Category (inclueds non-category branches))
	IF (EXISTS (SELECT 1 FROM @catTypeIds WHERE cat_id = 2))
	BEGIN
		INSERT INTO @catTypeIds (cat_id) VALUES (3)
	END
		 

	SELECT TOP(@selectLimit) c.category_id AS id, site_id, category_name, category_type_id, 
				description, short_name, specification, is_search_category, is_displayed, product_count, 
				auto_generated, hidden, matrix_type, enabled,
				modified,  created, has_image, url_id,c.sort_order
		FROM category c
			INNER JOIN #category_ids
				ON c.category_id = #category_ids.category_id

		WHERE (@enabled IS NULL OR c.enabled = @enabled)
			AND (@categoryTypeIds  IS NULL OR category_type_id in (SELECT cat_id from @catTypeIds))
			AND (@isSearchCategory IS NULL OR c.is_search_category = @isSearchCategory)
			AND (@autoGenerated IS NULL OR c.auto_generated = @autoGenerated)
			AND category_name like @text+'%'

					 
	
	DROP TABLE #category_ids

END
GO

GRANT EXECUTE ON dbo.adminProduct_GetCategoryBySearchFilters TO VpWebApp 
GO
------------------------------------------------------------------------------------------------

--- publicSearchCategory_GetSearchOptionsByGroupIdOptionIdNameWithPagingList

EXEC dbo.global_DropStoredProcedure 'dbo.publicSearchCategory_GetSearchOptionsByGroupIdOptionIdNameWithPagingList'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.publicSearchCategory_GetSearchOptionsByGroupIdOptionIdNameWithPagingList
	@groupId int,
	@searchText varchar(500),
	@startIndex int,
	@endIndex int,
	@optionId int,
	@totalCount int output
AS
-- ==========================================================================
-- $ Author : Chinthaka $
-- ==========================================================================
BEGIN

	SET NOCOUNT ON;

	SELECT 
		ROW_NUMBER() OVER (ORDER BY sort_order) AS row, 
		search_option_id, 
		search_group_id, 
		[name], 
		sort_order, 
		created, 
		enabled, 
		modified
	into #temp_search_option
	FROM search_option
	WHERE (@groupId = 0 OR search_group_id = @groupId)
	AND [name] LIKE (@searchText + '%') 
	AND (@optionId = 0 OR search_option_id = @optionId)

	SELECT	search_option_id AS id, search_group_id, [name], sort_order, created, enabled, modified
	FROM #temp_search_option
	WHERE (row BETWEEN @startIndex AND @endIndex)
	ORDER BY row

	SELECT @totalCount = COUNT(*)
	FROM #temp_search_option

END
GO

GRANT EXECUTE ON dbo.publicSearchCategory_GetSearchOptionsByGroupIdOptionIdNameWithPagingList TO VpWebApp 
GO

  
----------Add show_in_horizontal_matrix column to category_to_specification_type table----------------

IF NOT EXISTS (
SELECT * 
FROM   sys.columns 
WHERE  object_id = OBJECT_ID(N'[dbo].[category_to_specification_type]') 
	 AND name = 'show_in_horizontal_matrix'
)
BEGIN
ALTER TABLE [dbo].[category_to_specification_type] 
ADD show_in_horizontal_matrix bit NOT NULL DEFAULT 1

END
GO
  
----------------------adminProduct_AddCategorySpecificationType---------------------

EXEC dbo.global_DropStoredProcedure 'dbo.adminProduct_AddCategorySpecificationType'
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.adminProduct_AddCategorySpecificationType
	@categoryId int,
	@specificationTypeId int,
	@sortOrder int,
	@showInMatrix bit,
	@enabled bit,
	@id int output,
	@created smalldatetime output,
	@specDisplayLength int,
	@displayName varchar(255),
	@cssWidth FLOAT,
	@showInHorizontalMatrix bit
AS
-- ==========================================================================
-- $Author: Dulip $
-- 2020-11-16
-- ==========================================================================
BEGIN
--
	SET NOCOUNT ON;

	SET @created = GETDATE()

	INSERT INTO  category_to_specification_type (category_id, spec_type_id, sort_order,	[enabled], modified, created, show_in_matrix, spec_display_length, display_name, css_width, show_in_horizontal_matrix) 
	VALUES (@categoryId, @specificationTypeId, @sortOrder, @enabled, @created, @created, @showInMatrix, @specDisplayLength, @displayName, @cssWidth, @showInHorizontalMatrix)
	
	SET @id = SCOPE_IDENTITY() 

END
GO
GRANT EXECUTE ON dbo.adminProduct_AddCategorySpecificationType TO VpWebApp 
GO
----------------------adminProduct_GetCategorySpecificationTypeByCategoryIdSpecTypeId---------------------


EXEC dbo.global_DropStoredProcedure 'dbo.adminProduct_GetCategorySpecificationTypeByCategoryIdSpecTypeId'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.adminProduct_GetCategorySpecificationTypeByCategoryIdSpecTypeId
	@categoryId int,
	@specTypeId int
AS
-- ==========================================================================
-- $Author: Dulip $
-- 2020-11-16
-- ==========================================================================
BEGIN
	
	SET NOCOUNT ON;

	SELECT category_to_specification_type_id AS id, category_id, spec_type_id, sort_order, [enabled], modified, created, show_in_matrix,
			spec_display_length, display_name, css_width, show_in_horizontal_matrix
	FROM category_to_specification_type
	WHERE category_id = @categoryId AND spec_type_id = @specTypeId

END
GO

GRANT EXECUTE ON dbo.adminProduct_GetCategorySpecificationTypeByCategoryIdSpecTypeId TO VpWebApp 
GO


----------------------adminProduct_UpdateCategorySpecificationType--------------------

EXEC dbo.global_DropStoredProcedure 'dbo.adminProduct_UpdateCategorySpecificationType'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.adminProduct_UpdateCategorySpecificationType
	@id int,
	@categoryId int,
	@specificationTypeId int,
	@sortOrder int,
	@showInMatrix bit,
	@enabled bit,
	@modified smalldatetime output,
	@specDisplayLength int,
	@displayName varchar(255),
	@cssWidth float,
	@showInHorizontalMatrix bit
AS
-- ==========================================================================
-- $Author: Dulip $
-- 2020-11-16
-- ==========================================================================
BEGIN
--
	SET NOCOUNT ON;

	SET @modified = GETDATE()

	UPDATE category_to_specification_type
	SET
		category_id = @categoryId,
		spec_type_id = @specificationTypeId,
		sort_order = @sortOrder,
		show_in_matrix = @showInMatrix,
		[enabled] = @enabled,
		modified = @modified,
		spec_display_length = @specDisplayLength,
		display_name = @displayName,
		css_width = @cssWidth,
		show_in_horizontal_matrix = @showInHorizontalMatrix
	WHERE category_to_specification_type_id = @id

END
GO

GRANT EXECUTE ON adminProduct_UpdateCategorySpecificationType TO VpWebApp
GO

----------------------publicProduct_GetCategorySpecificationTypeByCategoryIdList--------------------

EXEC dbo.global_DropStoredProcedure 'dbo.publicProduct_GetCategorySpecificationTypeByCategoryIdList'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.publicProduct_GetCategorySpecificationTypeByCategoryIdList
	@id int
AS
-- ==========================================================================
-- $Author: Dulip $
-- 2020-11-16
-- ==========================================================================
BEGIN
--
	SET NOCOUNT ON;
	
	SELECT category_to_specification_type_id AS id, category_id, spec_type_id, sort_order
			, [enabled], modified, created, show_in_matrix, spec_display_length, display_name, css_width, show_in_horizontal_matrix
	FROM category_to_specification_type
	WHERE category_id = @id
	ORDER BY sort_order

END
GO
GRANT EXECUTE ON dbo.publicProduct_GetCategorySpecificationTypeByCategoryIdList TO VpWebApp 
GO

----------------------publicProduct_GetCategorySpecificationTypeDetail--------------------

EXEC dbo.global_DropStoredProcedure 'dbo.publicProduct_GetCategorySpecificationTypeDetail'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.publicProduct_GetCategorySpecificationTypeDetail
	@id int
AS
-- ==========================================================================
-- $Author: Dulip $
-- 2020-11-16
-- ==========================================================================
BEGIN
--
SET NOCOUNT ON;

	SELECT category_to_specification_type_id AS id, category_id, spec_type_id
			, sort_order, show_in_matrix, [enabled], modified, created, spec_display_length, display_name, css_width, show_in_horizontal_matrix
	FROM category_to_specification_type
	WHERE category_to_specification_type_id = @id

END
GO

GRANT EXECUTE ON publicProduct_GetCategorySpecificationTypeDetail TO VpWebApp
GO
----------------------end--------------------

EXEC dbo.global_DropStoredProcedure 'dbo.adminProduct_ChangeProductUpdateStatuses'

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.adminProduct_ChangeProductUpdateStatuses
	@productId INT,
	@searchContentmodified BIT,
	@contentModified BIT,
	@enabled BIT,
	@archived BIT
AS
-- ==========================================================================
-- $Author: Chirath $
-- ==========================================================================
BEGIN
	
	SET NOCOUNT ON;

	UPDATE product
	SET search_content_modified = @searchContentmodified, content_modified = @contentModified, enabled = @enabled, archived = @archived, modified = GETDATE()
	WHERE product_id = @productId 

END
GO

GRANT EXECUTE ON dbo.adminProduct_ChangeProductUpdateStatuses TO VpWebApp 
GO
